## Chronological Order of Usage in Backtest Mode (--backtest True)
This traces the execution flow starting from program start (argparse in name == "main"), assuming force_train=False (models may load from cache) and general conditions (e.g., some training needed, valid data). Calls are listed in the order they are first invoked during execution; repeated calls (e.g., per-symbol) are noted with multiplicity. Unused definitions are not listed here.

main (entry point: parses args, calls main with backtest_only=True).
get_api_keys (validates/prompts for keys).
check_dependencies (verifies imports).
validate_config (checks CONFIG values).
create_cache_directory (makes cache dir).
load_model_and_scaler (called multiple times: once per symbol in any() to check need_training).
train_symbol (called once per symbol in loop).

Within train_symbol:

load_or_fetch_data (loads/fetches data).

fetch_data (if no cache: fetches bars).


load_news_sentiment (loads/computes sentiment).
load_model_and_scaler (loads if exists).
calculate_indicators (adds indicators to DF).
preprocess_data (if training needed: creates sequences with noise).
train_model (if training needed: trains model).

TradingModel (instantiated in train_model).


save_model_and_scaler (if trained: saves artifacts).




backtest (called once per symbol in backtest branch).

Within backtest:

preprocess_data (inference mode: creates sequences).
TradingModel (used via loaded model for forward pass).




calculate_performance_metrics (called once per symbol after backtest).
format_email_body (called once after all symbols).
send_email (called once with backtest results).

Execution ends after logging final value.

## Chronological Order of Usage in Live Trading Mode (--backtest False)
Similar start to backtest, but diverges after training/loading. Assumes market open/closed cycles, valid data, and some trades triggered. Infinite loop, so order repeats per cycle. First invocation order listed; repeats noted.

main (entry point: parses args, calls main with backtest_only=False).
get_api_keys (validates/prompts for keys).
check_dependencies (verifies imports).
validate_config (checks CONFIG values).
create_cache_directory (makes cache dir).
load_model_and_scaler (called multiple times: once per symbol in any() to check need_training).
train_symbol (called once per symbol in loop).

Within train_symbol:

load_or_fetch_data (loads/fetches data).

fetch_data (if no cache: fetches bars).


load_news_sentiment (loads/computes sentiment).
load_model_and_scaler (loads if exists).
calculate_indicators (adds indicators to DF).
preprocess_data (if training needed: creates sequences with noise).
train_model (if training needed: trains model).

TradingModel (instantiated in train_model).


save_model_and_scaler (if trained: saves artifacts).




fetch_recent_data (in live loop: once per symbol per 15min cycle if market open).
calculate_indicators (once per symbol per cycle: adds to recent DF).
preprocess_data (once per symbol per cycle: inference mode for recent data).
TradingModel (used via loaded model for forward pass on recent sequence per symbol per cycle).
send_email (multiple: per trade if buy/sell, plus once per cycle for summary; also if drawdown exceeded).

Execution continues in infinite loop (no natural end unless drawdown pause or manual stop). If market closed, sleeps with timer (no function calls).
